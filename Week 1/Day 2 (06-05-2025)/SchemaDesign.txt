Design the database for a shop which sells products
Points for consideration
  1) One product can be supplied by many suppliers
  2) One supplier can supply many products
  3) All customers details have to present
  4) A customer can buy more than one product in every purchase
  5) Bill for every purchase has to be stored
  6) These are just details of one shop


product 
 product_id, name, quantity, price

supplier
 supplier_id, name, email, supplier_type_id

supplier_type_master
 supplier_type_id, supplier_type

supplier_product
 supplier_id, product_id, supplied_price

customer
 customer_id, name, email, address, customer_type_id

customer_type
 customer_type_id, membership_type

bill_order
 bill_id, customer_id, total_amount, payment_id

billing_detail
 bill_id, product_id, quantity, price_on_sale, date

payment
 payment_id, type, status

status_master 
 status_id, status_message

/


create table product (product_id int primary key, name varchar(32) not null, quantity int not null, price decimal(10,2));

create table supplier_type_master (supplier_type_id int primary key, supplier_type varchar(32) not null);

create table supplier (supplier_id int primary key, name varchar(32) not null, email varchar(64), supplier_type_id int, foreign key (supplier_type_id) references supplier_type_master(supplier_type_id));

create table supplier_product (supplier_id int, product_id int, supplied_price decimal(10,2), primary key (supplier_id, product_id), foreign key (supplier_id) references supplier(supplier_id), foreign key (product_id) references product(product_id));

create table customer_type (customer_type_id int primary key, membership_type varchar(32) not null);

create table customer (customer_id int primary key, name varchar(32) not null, email varchar(64), address varchar(128), customer_type_id int, foreign key (customer_type_id) references customer_type(customer_type_id));

create table status_master (status_id int primary key, status_message varchar(32) not null);

create table payment (payment_id int primary key, type varchar(16) not null, status int, foreign key (status) references status_master(status_id));

create table bill_order (bill_id int primary key, customer_id int, total_amount decimal(10,2), payment_id int, foreign key (customer_id) references customer(customer_id), foreign key (payment_id) references payment(payment_id));

create table billing_detail (bill_id int, product_id int, quantity int not null, price_on_sale decimal(10,2), date date, primary key (bill_id, product_id), foreign key (bill_id) references bill_order(bill_id), foreign key (product_id) references product(product_id));


/


For, In session discussed design,


create table categories (
    id int primary key,
    name varchar(64) not null,
    status varchar(32) not null
);

create table country (
    id int primary key,
    name varchar(64) not null
);

create table state (
    id int primary key,
    name varchar(64) not null,
    country_id int,
    foreign key (country_id) references country(id)
);

create table city (
    id int primary key,
    name varchar(64) not null,
    state_id int,
    foreign key (state_id) references state(id)
);

create table area (
    zipcode varchar(16) primary key,
    name varchar(64) not null,
    city_id int,
    foreign key (city_id) references city(id)
);

create table address (
    id int primary key,
    door_number varchar(16),
    addressline1 varchar(128),
    zipcode varchar(16),
    foreign key (zipcode) references area(zipcode)
);

create table supplier (
    id int primary key,
    name varchar(64) not null,
    contact_person varchar(64),
    phone varchar(16),
    email varchar(64),
    address_id int,
    status varchar(32),
    foreign key (address_id) references address(id)
);

create table product (
    id int primary key,
    name varchar(64) not null,
    unit_price decimal(10,2),
    quantity int,
    description varchar(256),
    image varchar(128)
);

create table product_supplier (
    transaction_id int primary key,
    product_id int,
    supplier_id int,
    date_of_supply date,
    quantity int,
    foreign key (product_id) references product(id),
    foreign key (supplier_id) references supplier(id)
);

create table customer (
    id int primary key,
    name varchar(64) not null,
    phone varchar(16),
    age int,
    address_id int,
    foreign key (address_id) references address(id)
);

create table order_table (
    order_number int primary key,
    customer_id int,
    date_of_order date,
    amount decimal(10,2),
    order_status varchar(32),
    foreign key (customer_id) references customer(id)
);

create table order_details (
    id int primary key,
    order_number int,
    product_id int,
    quantity int,
    unit_price decimal(10,2),
    foreign key (order_number) references order_table(order_number),
    foreign key (product_id) references product(id)
);
